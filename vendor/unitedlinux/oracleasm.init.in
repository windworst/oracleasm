#! /bin/sh
# init fragment for ocfs
#
### BEGIN INIT INFO
# Provides: ocfs
# Required-Start: $network
# Required-Stop:
# Default-Start: 2 3 5
# Default-Stop:
# Description: Load OCFS driver at system boot
### END INIT INFO

#
# Note that the start priority is after the network comes up.
# There is no real automatic mounting yet.
#

# Force LC_ALL=C
export LC_ALL=C

# Source init.d functions
. /etc/rc.status

prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
. ${libdir}/oracleasm/oracleasm.init.functions

# Source networking configuration
[ -f /etc/sysconfig/oracleasm ] && . /etc/sysconfig/oracleasm


rc_reset

DEVASM=/dev/oracleasm
MODNAME=oracleasm

KVER="`uname -r`"
case "$KVER" in
2.4.19-64GB-SMP|2.4.19-4GB-SMP|2.4.19-4GB)
    MODPATH="/lib/modules/${KVER}/kernel/drivers/addon/oracleasm"
    ;;
2.4.21-111-default|2.4.21-111-smp)
    MODPATH="/lib/modules/${KVER}/kernel/drivers/addon/oracleasm"
    ;;
*)
    echo -n "Checking for United Linux Enterprise kernel:"
    false
    rc_status -v
    rc_exit
    ;;
esac

test -r "$MODPATH/oracleasm.o" || exit 5



if_fail()
{
    RC="$1"
    if [ "$RC" = "0" ]
    then
        true
	rc_status -v
        return
    elif [ "$RC" = "2" ]
    then
        return
    fi
    false
    rc_status -v
    rc_exit
}


configure()
{
    configure_ask
    write_sysconfig
    if_fail $? "Unable to write the driver configuration"
}


start()
{
    dev_create "${DEVASM}"
    if_fail "$?" "Unable to create ${DEVASM}"

    if [ "$ORACLEASM_ENABLED" != "true" ]
    then
        exit 0
    fi

    load_module "${MODNAME}"
    if_fail "$?" "Unable to load the ASMlib driver module"

    mount_device
    if_fail "$?" "Unable to mount the ASMlib driver filesystem"
}

stop()
{
    unmount_device
    if_fail "$?" "Unable to unmount the ASMlib driver filesystem"

    unload_module oracleasm
    if_fail "$?" "Unable to unload the ASM library driver"
}


case "$1" in
    start)
        start
	;;
	
    status)
        echo -n $"Checking if ASM is loaded: "
	if grep '^oracleasm ' /proc/modules >/dev/null 2>&1
        then
            rc_status -v
            echo -n $"Checking if $DEVASM is mounted: "
            DEVASMSEARCH="`echo $DEVASM | sed -e 's/\//\\\\\//g'`"
            if grep "^oracleasmfs $DEVASMSEARCH oracleasmfs" /proc/mounts >/dev/null 2>&1
            then
                rc_status -v
                rc_exit
            else
                rc_status -v
                rc_exit
            fi
        else
            false
            rc_status -v
            rc_exit
        fi
        ;;

    configure)
        configure
        if [ "$ORACLEASM_ENABLED" = "true" ]
        then
            start
        else
            stop
        fi
        ;;

    enable)
        ORACLEASM_ENABLED=true
        write_sysconfig
        if_fail $? "Unable to write the driver configuration"
        start
        ;;

    disable)
        ORACLEASM_ENABLED=false
        write_sysconfig
        if_fail $? "Unable to write the driver configuration"
        stop
        ;;

    stop)
        stop
        ;;

    restart)
        stop
        start
	;;

    *)
	echo "Usage: $0 {start|stop|restart|link|enable|disable|configure|status}"
        exit 1
esac

exit 0

case "$1" in
    start)
        fstab_check

        echo -n $"Loading OCFS:"

        # Note that UnitedLinux doesn't have NETWORKING=no

        if grep '^ocfs ' /proc/modules >/dev/null 2>&1; then
            rc_status -v
            rc_exit
        fi

        "$LOAD_OCFS"
        rc_status -v
        ;;
        
    status)
        echo -n $"Checking if OCFS is loaded: "
        grep '^ocfs ' /proc/modules >/dev/null 2>&1
        rc_status -v
        ;;

    stop|force-reload|restart)
	;;

    *)
	echo "Usage: $0 {start|stop|status|restart|force-reload}"
        exit 1
esac

rc_exit
